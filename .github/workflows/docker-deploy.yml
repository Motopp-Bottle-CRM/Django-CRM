name: Build & Push (main/develop/tags/manual)

on:
  push:
    branches: ["main", "develop"]
    tags: ["*"]
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag to push"
        required: true
        default: "manual"
      platforms:
        description: "Comma-separated platforms"
        required: false
        default: "linux/amd64"
      context:
        description: "Build context path"
        required: false
        default: "."
      dockerfile:
        description: "Dockerfile path"
        required: false
        default: "./Dockerfile"

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/bottlecrm-backend

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_NAME }}
          tags: |
            # auto on main
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            # auto on develop
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
            # auto on tag
            type=ref,event=tag
            # manual input tag
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' }}
            # always also push a sha tag
            type=sha,format=short

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.event.inputs.context != '' && github.event.inputs.context || '.' }}
          file: ${{ github.event.inputs.dockerfile != '' && github.event.inputs.dockerfile || './docker/dockerfile' }}
          push: true
          platforms: ${{ github.event.inputs.platforms != '' && github.event.inputs.platforms || 'linux/amd64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max