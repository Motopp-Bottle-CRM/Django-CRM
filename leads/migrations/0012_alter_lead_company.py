# Generated by Django 4.2.1 on 2025-10-01 10:40

from django.db import migrations, models, connection
import django.db.models.deletion


def convert_company_field_data(apps, schema_editor):
    """
    Convert company field from CharField to ForeignKey for PostgreSQL
    """
    with connection.cursor() as cursor:
        # First, create a default company if it doesn't exist
        cursor.execute("""
            INSERT INTO company (id, name, address, telephone, created_at, updated_at, org_id)
            SELECT gen_random_uuid(), 'Unknown Company', '', '', NOW(), NOW(), NULL
            WHERE NOT EXISTS (SELECT 1 FROM company WHERE name = 'Unknown Company')
        """)
        
        # Get the default company ID
        cursor.execute("SELECT id FROM company WHERE name = 'Unknown Company'")
        result = cursor.fetchone()
        if result:
            default_company_id = result[0]
            
            # Add a temporary column for the foreign key
            cursor.execute("ALTER TABLE lead ADD COLUMN company_id_temp UUID")
            
            # Update the temporary column with the default company ID for all leads
            cursor.execute("UPDATE lead SET company_id_temp = %s", [default_company_id])
            
            # Drop the old company column
            cursor.execute("ALTER TABLE lead DROP COLUMN company")
            
            # Rename the temporary column to company_id
            cursor.execute("ALTER TABLE lead RENAME COLUMN company_id_temp TO company_id")
            
            # Add the foreign key constraint
            cursor.execute("""
                ALTER TABLE lead 
                ADD CONSTRAINT lead_company_id_fkey 
                FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE RESTRICT
            """)


def reverse_convert_company_field_data(apps, schema_editor):
    """
    Reverse migration - convert back to CharField
    """
    with connection.cursor() as cursor:
        # Drop the foreign key constraint
        cursor.execute("ALTER TABLE lead DROP CONSTRAINT IF EXISTS lead_company_id_fkey")
        
        # Add a temporary CharField column
        cursor.execute("ALTER TABLE lead ADD COLUMN company_temp VARCHAR(255)")
        
        # Update the temporary column with company names
        cursor.execute("""
            UPDATE lead 
            SET company_temp = company.name 
            FROM company 
            WHERE lead.company_id = company.id
        """)
        
        # Drop the foreign key column
        cursor.execute("ALTER TABLE lead DROP COLUMN company_id")
        
        # Rename the temporary column to company
        cursor.execute("ALTER TABLE lead RENAME COLUMN company_temp TO company")


class Migration(migrations.Migration):

    dependencies = [
        ('leads', '0011_alter_lead_source_alter_lead_status'),
    ]

    operations = [
        migrations.RunPython(convert_company_field_data, reverse_convert_company_field_data),
    ]
